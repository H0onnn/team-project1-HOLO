-- 서브쿼리

-- 문제. 회사평균연봉보다 더 많이 버는 사원 출력하기
SELECT *
FROM EMPLOYEE
WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEE);


-- 문제. DEPART 가 1 인 부서에 근무하는 모든 직급(POSITION)과 동일한 직급을 가진 사원들을 조회한다.
SELECT *
FROM EMPLOYEE
WHERE POSITION IN(SELECT POSITION FROM EMPLOYEE WHERE DEPART = 1);





-- 1. EMPLOYEES 테이블과 구조와 데이터가 동일한 EMPLOYEES2 테이블을 생성한다.
-- 키는 복사되지 않는다.
CREATE TABLE EMPLOYEE2
AS (SELECT * FROM EMPLOYEES);


-- 2. JOB_HISTORY 테이블의 EMPLOYEE_ID, JOB_ID, DEPARTMENT_ID 칼럼만 복사하여 JOB_HISTORY2 테이블을 생성한다.
CREATE TABLE JOB_HISTORY2 (EMPLOYEE_ID, JOB_ID, DEPARTMENT_ID)
AS (SELECT EMPLOYEE_ID, JOB_ID, DEPARTMENT_ID FROM JOB_HISTORY);


-- 3. DEPARTMENTS 테이블에서 MANAGER_ID 가 없는 데이터를 제외한 모든 데이터를 복사하여 DEPARTMENTS2 테이블을 생성한다.
CREATE TABLE DEPARTMENTS2
AS (SELECT * FROM DEPARTMENTS WHERE MANAGER_ID IS NOT NULL);


-- 4. REGIONS 테이블과 구조만 동일하고 데이터는 하나도 존재하지 않는 REGIONS2 테이블을 생성한다.
CREATE TABLE REGIONS2
AS (SELECT * FROM REGIONS WHERE 1 = 2);


-- 5. REGIONS 테이블에서 REGION_ID 가 1 과 2 인 지역들을 검색하여 REGIONS2 테이블에 삽입한다.
-- 1)
INSERT INTO REGIONS2 (REGION_ID, REGION_NAME)
SELECT REGION_ID, REGION_NAME FROM REGIONS WHERE REGION_ID IN(1, 2);

-- 2)
INSERT ALL
INTO REGIONS2 VALUES (REGION_ID, REGION_NAME)
SELECT * FROM REGIONS WHERE REGION_ID IN(1, 2);


-- 6. EMPLOYEES2 테이블에서 EMPLOYEE_ID 가 150 인 사원이 EMPLOYEE_ID 가 200 인 사원과 같은 부서(DEPARTMENT_ID)가 되도록 수정한다.
UPDATE EMPLOYEE2
SET DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM EMPLOYEE2 WHERE EMPLOYEE_ID = 200)
WHERE EMPLOYEE_ID = 150;


-- 7. 이번 조직 개편에서 'Marketing' 부서를 없애고, 해당 사원을 모두 해고하기로 했다.
-- EMPLOYEES2 테이블에서 부서가 'Marketing' 인 모든 사원을 삭제한다.
DELETE FROM EMPLOYEE2
WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Marketing');


-- 8. 지금까지 생성한 EMPLOYEES2, JOB_HISTORY2, DEPARTMENTS2, REGIONS2 테이블을 모두 삭제한다.
DROP TABLE EMPLOYEE2;
DROP TABLE JOB_HISTORY2;
DROP TABLE DEPARTMENTS2;
DROP TABLE REGIONS2;

DROP TABLE STUDENT;